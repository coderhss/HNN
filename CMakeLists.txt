cmake_minimum_required(VERSION 3.16)
project(HNN)
add_subdirectory(common)
add_subdirectory(engine)
add_subdirectory(operator)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/common/thirdparty/spdlog/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/common/thirdparty/googletest/googletest/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/common/thirdparty/googletest/googlemock/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/common/include/tensor)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/common/include/data_manager)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/common/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/common/include/log)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/common/include/allocator)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/engine/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/operator/include/native)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/operator/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/common/thirdparty/opencv/linux-x86/include/opencv4)
# set( CMAKE_VERBOSE_MAKEFILE on )
set(CMAKE_CXX_STANDARD 14)
find_package(OpenMP REQUIRED)
find_package(OpenCV REQUIRED 
			PATHS /${CMAKE_CURRENT_SOURCE_DIR}/common/thirdparty/opencv/linux-x86/lib/cmake/opencv4
			NO_DEFAULT_PATH)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address -fopenmp -o0")
set(CMAKE_BUILD_TYPE Release)
add_executable(HNN main.cpp)
link_directories(${OPENCV_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/common/thirdparty/opencv/linux-x86/lib)
message(${CMAKE_CURRENT_SOURCE_DIR}/common/thirdparty/opencv/linux-x86/lib)
message(file ${OPENCV_PATH})
target_link_libraries(HNN PUBLIC -Wl,--start-group common engine operator ${OpenCV_LIBS} OpenMP::OpenMP_CXX -Wl,--end-group)

if (BUILD_TEST STREQUAL ON)
    set(CMAKE_BUILD_TYPE Debug)
    include_directories(${CMAKE_CURRENT_SOURCE_DIR}/operator/test/MNN/include)
    include_directories(${CMAKE_CURRENT_SOURCE_DIR}/operator/test/MNN/include/MNN)
    file(GLOB_RECURSE src_file ${CMAKE_CURRENT_SOURCE_DIR}/operator/test/naive/*.cpp)
    link_directories(${CMAKE_CURRENT_SOURCE_DIR}/operator/test/MNN/lib)
    add_executable(test_all ${CMAKE_CURRENT_SOURCE_DIR}/operator/test/test_all.cpp ${src_file})
    target_link_libraries(test_all PUBLIC -Wl,--start-group engine operator common MNN MNN_Express OpenMP::OpenMP_CXX -Wl,--end-group)
endif ()
